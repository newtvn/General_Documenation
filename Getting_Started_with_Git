
# Git Tutorial for Beginners

## **1. Install Git**
1. **Windows:** Download the installer from [Git for Windows](https://git-scm.com/).
2. **Mac:** Use Homebrew: `brew install git`.
3. **Linux:** Use your package manager:
   - Ubuntu: `sudo apt-get install git`
   - Fedora: `sudo dnf install git`

---

## **2. Set Up Git**
After installation, configure your Git user settings:
```bash
git config --global user.name "Your Name"
git config --global user.email "youremail@example.com"
```

Check your settings:
```bash
git config --list
```

---

## **3. Create a Repository**
A repository (or repo) is a storage space for your project.

### Initialize a Local Repository
1. Go to your project directory:
   ```bash
   cd path/to/your/project
   ```
2. Initialize Git in the directory:
   ```bash
   git init
   ```

### Clone an Existing Repository
Copy a repository from a remote server (e.g., GitHub):
```bash
git clone https://github.com/username/repository.git
```

---

## **4. Add and Commit Changes**
- **Track changes in your project:**  
  Add files to the staging area:
  ```bash
  git add filename.txt
  ```
  Or add all files:
  ```bash
  git add .
  ```

- **Commit changes:**  
  Save a snapshot of the tracked files:
  ```bash
  git commit -m "Your commit message"
  ```

---

## **5. View Repository Status**
To see the current status of your repository:
```bash
git status
```

---

## **6. Push and Pull Changes**
- **Push Changes to Remote Repository:**  
  Send your commits to a remote repository:
  ```bash
  git push origin main
  ```

- **Pull Updates from Remote Repository:**  
  Download and integrate changes from the remote repository:
  ```bash
  git pull origin main
  ```

---

## **7. Branching**
Branches let you work on different features without affecting the main codebase.

- **Create a New Branch:**
  ```bash
  git branch new-feature
  ```

- **Switch to a Branch:**
  ```bash
  git checkout new-feature
  ```

- **Merge a Branch:**
  First, switch to the main branch:
  ```bash
  git checkout main
  ```
  Then, merge:
  ```bash
  git merge new-feature
  ```

---

## **8. Check Log History**
View the history of your commits:
```bash
git log
```

---

## **9. Undo Changes**
- **Unstage a File:**
  ```bash
  git reset filename.txt
  ```

- **Discard Uncommitted Changes:**
  ```bash
  git checkout -- filename.txt
  ```

---

## **10. Collaborate**
- **Clone a Team Repository:**  
  Work with a shared repository using:
  ```bash
  git clone https://repository-url.git
  ```

- **Work with Remote Repositories:**  
  Add a remote repository:
  ```bash
  git remote add origin https://repository-url.git
  ```

---

## **11. Advanced Tips**
- **View Differences Before Committing:**
  ```bash
  git diff
  ```

- **Remove Files from Tracking:**
  ```bash
  git rm filename.txt
  ```

- **Show Remote Repositories:**
  ```bash
  git remote -v
  ```

---

This guide covers the essential Git commands and workflows for a beginner. Let me know if you'd like examples or a more advanced Git tutorial!
